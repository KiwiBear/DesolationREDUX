CMAKE_MINIMUM_REQUIRED(VERSION 2.8)
PROJECT(REDEX)

FILE(GLOB LIBSOURCES "Source/*.cpp")
FILE(GLOB TESTSSOURCES "Source/TestApps/*.cpp")
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_HOME_DIRECTORY}/Binaries)

SET(CMAKE_CXX_STANDARD 11)
SET(CMAKE_CXX_STANDARD_REQUIRED ON)

IF (WIN32)
    SET(SYSTEMLIBS rpcrt4)
    IF(MINGW)
        SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static")
        SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static")
    ENDIF(MINGW)
ELSE(WIN32)
    SET(SYSTEMLIBS uuid)
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static-libgcc")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++")
ENDIF(WIN32)

#SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -static-libgcc -static -lrpcrt4")
#SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -static-libgcc -static-libstdc++ -static -lrpcrt4")

ADD_LIBRARY(redex SHARED ${LIBSOURCES})
TARGET_LINK_LIBRARIES(redex ${SYSTEMLIBS} )
IF (WIN32)
    SET_TARGET_PROPERTIES(redex PROPERTIES LINK_SEARCH_END_STATIC 1)
ENDIF()    

IF (UNIX)
FOREACH( TESTSSOURCEFILE ${TESTSSOURCES} )
    GET_FILENAME_COMPONENT(TESTNAME ${TESTSSOURCEFILE} NAME)
    STRING( REPLACE ".cpp" "" TESTNAME ${TESTNAME} )
    ADD_EXECUTABLE( ${TESTNAME} ${TESTSSOURCEFILE} )
    TARGET_LINK_LIBRARIES( ${TESTNAME} redex ${SYSTEMLIBS} )
ENDFOREACH( TESTSSOURCEFILE ${TESTSSOURCES} )
ENDIF(UNIX)